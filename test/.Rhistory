library(RCurl)
library(tidyverse)
library(stringr)
library(sf)
library(magrittr)
library(data.table)
library(parallel)
library(lwgeom)
library(RCurl)
library(tidyverse)
library(stringr)
library(sf)
library(magrittr)
library(data.table)
library(parallel)
library(lwgeom)
library(RCurl)
library(tidyverse)
library(stringr)
library(sf)
library(magrittr)
library(data.table)
library(parallel)
library(lwgeom)
library(RCurl)
library(tidyverse)
library(stringr)
library(sf)
library(magrittr)
library(data.table)
library(parallel)
library(lwgeom)
# Get metadata with data addresses
tempf <- file.path(tempdir(), "metadata.rds")
# check if metadata has already been downloaded
if (file.exists(tempf)) {
metadata <- readr::read_rds(tempf)
} else {
# download it and save to metadata
httr::GET(url="http://www.ipea.gov.br/geobr/metadata/metadata.rds", httr::write_disk(tempf, overwrite = T))
metadata <- readr::read_rds(tempf)
}
temp_ano <- subset(metadata, geo=="uf")
year=2010
temp_ano <- subset(metadata, geo=="uf")
# Verify year input
if (is.null(year)){ cat("Using data from year 2010 \n")
temp_ano <- subset(temp_ano, year==2010)
} else if (year %in% temp_ano$year){ temp_ano <- temp_ano[temp_ano[,2] == year, ]
} else { stop(paste0("Error: Invalid Value to argument 'year'. It must be one of the following: ",
paste(unique(temp_ano$year),collapse = " ")))
}
# list paths of files to download
filesD <- as.character(temp_ano$download_path)
filesD
if (is.null(year)){ cat("Using data from year 2010 \n")
temp_ano <- subset(temp_ano, year==2010)
} else if (year %in% temp_ano$year){ temp_ano <- temp_ano[temp_ano[,2] == year, ]
} else { stop(paste0("Error: Invalid Value to argument 'year'. It must be one of the following: ",
paste(unique(temp_ano$year),collapse = " ")))
}
temp_ano$year
if (is.null(year)){ cat("Using data from year 2010 \n")
temp_ano <- subset(temp_ano, year==2010)
} else if (year %in% temp_ano$year){ temp_ano <- temp_ano[temp_ano[,2] == year, ]
} else { stop(paste0("Error: Invalid Value to argument 'year'. It must be one of the following: ",
paste(unique(temp_ano$year),collapse = " ")))
}
library(data.table)
# Verify year input
if (is.null(year)){ cat("Using data from year 2010 \n")
temp_ano <- subset(temp_ano, year==2010)
} else if (year %in% temp_ano$year){ temp_ano <- temp_ano[temp_ano[,2] == year, ]
} else { stop(paste0("Error: Invalid Value to argument 'year'. It must be one of the following: ",
paste(unique(temp_ano$year),collapse = " ")))
}
temp_ano <- subset(temp_ano, year==2010)
# Get metadata with data addresses
tempf <- file.path(tempdir(), "metadata.rds")
# check if metadata has already been downloaded
if (file.exists(tempf)) {
metadata <- readr::read_rds(tempf)
} else {
# download it and save to metadata
httr::GET(url="http://www.ipea.gov.br/geobr/metadata/metadata.rds", httr::write_disk(tempf, overwrite = T))
metadata <- readr::read_rds(tempf)
}
temp_ano <- subset(metadata, geo=="uf")
if (is.null(year)){ cat("Using data from year 2010 \n")
temp_ano <- subset(temp_ano, year==2010)
}
if (is.null(year)){ cat("Using data from year 2010 \n")
temp_ano <- subset(temp_ano, year==2010)
}
if (is.null(year)){ cat("Using data from year 2010 \n")
temp_ano <- subset(temp_ano, year==2010)
}
if (year %in% temp_ano$year){ temp_ano <- temp_ano[temp_ano[,2] == year, ]
}
temp_ano[temp_ano[,2] == year, ]
temp_ano <- subset(temp_ano, year==2010)
filesD <- as.character(temp_ano$download_path)
lapply(X=filesD, function(x) httr::GET(url=x, httr::progress(),
httr::write_disk(paste0(tempdir(),"/", unlist(lapply(strsplit(x,"/"),tail,n=1L))), overwrite = T)) )
files <- unlist(lapply(strsplit(filesD,"/"), tail, n = 1L))
files <- paste0(tempdir(),"/",files)
files <- lapply(X=files, FUN= readr::read_rds)
file <- do.call('rbind', files)
head(file)
file$geometry[1]
file$geometry
shape <- (file$geometry[1])
plot(shape)
shape <- (file$geometry[1])
for (i in 2:27) {
shape <- st_union(shape, file$geometry[i])
}
shape <- (file$geometry[1])
plot(shape)
shape <- st_union(shape, file$geometry[2]
)
plot(shape)
shape <- st_union(shape, file$geometry[3])
plot(shape)
