as_tibble() %T>%
walk(function(.x) {
dir.create(glue("./federal_roads_accidents/{reference_year}"))
# Save original raw data
write_csv2(.x, glue("./federal_roads_accidents/{reference_year}/prf_raw_data"))
})
}
accidents <- get_raw_accidents(year, state)
read_html("https://portal.prf.gov.br/dados-abertos-acidentes") %>%
html_node("#acontent ul") %>%
html_nodes("li")
html_content <-
read_html("https://portal.prf.gov.br/dados-abertos-acidentes") %>%
html_node("#acontent ul") %>%
html_nodes("li")
{
html_content %>%
html_children %>%
html_attr("href")
}
{
html_content %>%
html_text() %>%
as.numeric() }
tibble(
href = {
html_content %>%
html_children %>%
html_attr("href")
},
year = {
html_content %>%
html_text() %>%
as.numeric() }
)
ref_year <- 2020
ref_state <- NULL
get_raw_accidents <- function(reference_year,
reference_state) {
html_content <-
read_html("https://portal.prf.gov.br/dados-abertos-acidentes") %>%
html_node("#acontent ul") %>%
html_nodes("li")
tibble(
href = {
html_content %>%
html_children %>%
html_attr("href")
},
year = {
html_content %>%
html_text() %>%
as.numeric() }
) %>%
filter(year == reference_year,
if_else(is.null(reference_state),
TRUE,
uf == reference_state)) %>%
mutate(href = glue("curl {href}/download | funzip")) %>%
pull(href) %>%
fread(encoding = "Latin-1") %>%
as_tibble() %T>%
walk(function(.x) {
dir.create(glue("./federal_roads_accidents/{reference_year}"))
# Save original raw data
write_csv2(.x, glue("./federal_roads_accidents/{reference_year}/prf_raw_data"))
})
}
accidents <- get_raw_accidents(year, state)
html_content <-
read_html("https://portal.prf.gov.br/dados-abertos-acidentes") %>%
html_node("#acontent ul") %>%
html_nodes("li")
tibble(
href = {
html_content %>%
html_children %>%
html_attr("href")
},
year = {
html_content %>%
html_text() %>%
as.numeric() }
) %>%
filter(year == reference_year,
if_else(is.null(reference_state),
TRUE,
uf == reference_state))
tibble(
href = {
html_content %>%
html_children %>%
html_attr("href")
},
year = {
html_content %>%
html_text() %>%
as.numeric() }
) %>%
filter(year == reference_year,
if_else(is.null(reference_state),
TRUE,
uf == reference_state))
tibble(
href = {
html_content %>%
html_children %>%
html_attr("href")
},
year = {
html_content %>%
html_text() %>%
as.numeric() }
) %>%
filter(year == reference_year
)
tibble(
href = {
html_content %>%
html_children %>%
html_attr("href")
},
year = {
html_content %>%
html_text() %>%
as.numeric() }
) %>%
filter(year == reference_year)
get_raw_accidents <- function(reference_year,
reference_state) {
html_content <-
read_html("https://portal.prf.gov.br/dados-abertos-acidentes") %>%
html_node("#acontent ul") %>%
html_nodes("li")
tibble(
href = {
html_content %>%
html_children %>%
html_attr("href")
},
year = {
html_content %>%
html_text() %>%
as.numeric() }
) %>%
filter(year == reference_year) %>%
mutate(href = glue("curl {href}/download | funzip")) %>%
pull(href) %>%
fread(encoding = "Latin-1") %>%
as_tibble() %T>%
walk(function(.x) {
dir.create(glue("./federal_roads_accidents/{reference_year}"))
# Save original raw data
write_csv2(.x, glue("./federal_roads_accidents/{reference_year}/prf_raw_data"))
})
}
accidents <- get_raw_accidents(year, state)
tibble(
href = {
html_content %>%
html_children %>%
html_attr("href")
},
year = {
html_content %>%
html_text() %>%
as.numeric() }
) %>%
filter(year == reference_year) %>%
mutate(href = glue("curl {href}/download | funzip")) %>%
pull(href) %>%
fread(encoding = "Latin-1")
tibble(
href = {
html_content %>%
html_children %>%
html_attr("href")
},
year = {
html_content %>%
html_text() %>%
as.numeric() }
) %>%
filter(year == reference_year) %>%
mutate(href = glue("curl {href}/download | funzip")) %>%
pull(href) %>%
fread(encoding = "Latin-1") %>%
as_tibble()
get_raw_accidents <- function(reference_year,
reference_state) {
html_content <-
read_html("https://portal.prf.gov.br/dados-abertos-acidentes") %>%
html_node("#acontent ul") %>%
html_nodes("li")
data <- tibble(
href = {
html_content %>%
html_children %>%
html_attr("href")
},
year = {
html_content %>%
html_text() %>%
as.numeric() }
) %>%
filter(year == reference_year) %>%
mutate(href = glue("curl {href}/download | funzip")) %>%
pull(href) %>%
fread(encoding = "Latin-1") %>%
as_tibble()
dir.create(glue("./federal_roads_accidents/{reference_year}/prf_raw_data"))
# Save original raw data
write_csv2(data, glue("./federal_roads_accidents/{reference_year}/prf_raw_data/{reference_year}_raw.csv"))
}
tibble(
href = {
html_content %>%
html_children %>%
html_attr("href")
},
year = {
html_content %>%
html_text() %>%
as.numeric() }
)
tibble(
href = {
html_content %>%
html_children %>%
html_attr("href")
},
year = {
html_content %>%
html_text() %>%
as.numeric() }
) %>%
filter(year == reference_year) %>%
mutate(href = glue("curl {href}/download | funzip")) %>%
pull(href) %>%
fread(encoding = "Latin-1") %>%
as_tibble()
data <- tibble(
href = {
html_content %>%
html_children %>%
html_attr("href")
},
year = {
html_content %>%
html_text() %>%
as.numeric() }
) %>%
filter(year == reference_year) %>%
mutate(href = glue("curl {href}/download | funzip")) %>%
pull(href) %>%
fread(encoding = "Latin-1") %>%
as_tibble()
if(reference_state == "all") {
reference_state <- unique(data$uf)
}
data %<>%
filter(uf %in% reference_state)
if(reference_state == "all") {
reference_state <- unique(data$uf)
}
if(reference_state == "all") {
reference_state <- unique(data$uf)
}
unique(data$uf)
data
data <- tibble(
href = {
html_content %>%
html_children %>%
html_attr("href")
},
year = {
html_content %>%
html_text() %>%
as.numeric() }
) %>%
filter(year == reference_year) %>%
mutate(href = glue("curl {href}/download | funzip")) %>%
pull(href) %>%
fread(encoding = "Latin-1") %>%
as_tibble()
data
unique(data$uf)
reference_state
reference_state = "all"
if(reference_state == "all") {
reference_state <- unique(data$uf)
}
data %<>%
filter(uf %in% reference_state)
data
dir.create(glue("./federal_roads_accidents/{reference_year}/prf_raw_data"))
glue("./federal_roads_accidents/{reference_year}/prf_raw_data/{reference_year}_
{if_else(length(reference_state) > 1, 'many', reference_state)}_raw.csv")
lue("./federal_roads_accidents/{reference_year}/prf_raw_data/{reference_year}_
{ifelse(length(reference_state) > 1, 'many', reference_state)}_raw.csv")
glue("./federal_roads_accidents/{reference_year}/prf_raw_data/{reference_year}_
{ifelse(length(reference_state) > 1, 'many', reference_state)}_raw.csv")
# Save original raw data
write_csv2(data, glue("./federal_roads_accidents/{reference_year}/prf_raw_data/{reference_year}_{ifelse(length(reference_state) > 1, 'many', reference_state)}_raw.csv"))
get_raw_accidents <- function(reference_year,
reference_state = "all") {
html_content <-
read_html("https://portal.prf.gov.br/dados-abertos-acidentes") %>%
html_node("#acontent ul") %>%
html_nodes("li")
data <- tibble(
href = {
html_content %>%
html_children %>%
html_attr("href")
},
year = {
html_content %>%
html_text() %>%
as.numeric() }
) %>%
filter(year == reference_year) %>%
mutate(href = glue("curl {href}/download | funzip")) %>%
pull(href) %>%
fread(encoding = "Latin-1") %>%
as_tibble()
if(reference_state == "all") {
reference_state <- unique(data$uf)
}
data %<>%
filter(uf %in% reference_state)
dir.create(glue("./federal_roads_accidents/{reference_year}/prf_raw_data"))
# Save original raw data
write_csv2(data, glue("./federal_roads_accidents/{reference_year}/prf_raw_data/{reference_year}_{ifelse(length(reference_state) > 1, 'many', reference_state)}_raw.csv"))
}
state
accidents <- get_raw_accidents(year)
get_raw_accidents <- function(reference_year,
reference_state = "all") {
html_content <-
read_html("https://portal.prf.gov.br/dados-abertos-acidentes") %>%
html_node("#acontent ul") %>%
html_nodes("li")
data <- tibble(
href = {
html_content %>%
html_children %>%
html_attr("href")
},
year = {
html_content %>%
html_text() %>%
as.numeric() }
) %>%
filter(year == reference_year) %>%
mutate(href = glue("curl {href}/download | funzip")) %>%
pull(href) %>%
fread(encoding = "Latin-1") %>%
as_tibble()
if(reference_state == "all") {
reference_state <- unique(data$uf)
}
data %<>%
filter(uf %in% reference_state)
dir.create(glue("./federal_roads_accidents/{reference_year}/prf_raw_data"),
showWarnings = FALSE)
# Save original raw data
write_csv2(data, glue("./federal_roads_accidents/{reference_year}/prf_raw_data/{reference_year}_{ifelse(length(reference_state) > 1, 'many', reference_state)}_raw.csv"))
}
accidents <- get_raw_accidents(year)
accidents <- get_raw_accidents(year)
get_raw_accidents <- function(reference_year,
reference_state = "all") {
html_content <-
read_html("https://portal.prf.gov.br/dados-abertos-acidentes") %>%
html_node("#acontent ul") %>%
html_nodes("li")
data <- tibble(
href = {
html_content %>%
html_children %>%
html_attr("href")
},
year = {
html_content %>%
html_text() %>%
as.numeric() }
) %>%
filter(year == reference_year) %>%
mutate(href = glue("curl {href}/download | funzip")) %>%
pull(href) %>%
fread(encoding = "Latin-1") %>%
as_tibble()
if(reference_state == "all") {
reference_state <- unique(data$uf)
}
data %<>%
filter(uf %in% reference_state)
dir.create(glue("./federal_roads_accidents/{reference_year}/prf_raw_data"),
showWarnings = FALSE)
# Save original raw data
write_csv2(data, glue("./federal_roads_accidents/{reference_year}/prf_raw_data/{reference_year}_{ifelse(length(reference_state) > 1, 'many', reference_state)}_raw.csv"))
data
}
accidents <- get_raw_accidents(year)
accidents
# Convert originl data frame into sf
accidents_sf <- st_as_sf(x = accidents,
coords = c("longitude", "latitude"),
crs = "+proj=longlat +datum=WGS84")
accidents
accidents_sf
# Convert originl data frame into sf
accidents_sf <- accidents %>%
filter(!is.na(latitude) & !is.na(longitude)) %>%
st_as_sf(coords = c("longitude", "latitude"),
crs = "+proj=longlat +datum=WGS84")
accidents %>%
filter(!is.na(latitude) & !is.na(longitude))
glimpse(accidents)
get_raw_accidents <- function(reference_year,
reference_state = "all") {
html_content <-
read_html("https://portal.prf.gov.br/dados-abertos-acidentes") %>%
html_node("#acontent ul") %>%
html_nodes("li")
data <- tibble(
href = {
html_content %>%
html_children %>%
html_attr("href")
},
year = {
html_content %>%
html_text() %>%
as.numeric() }
) %>%
filter(year == reference_year) %>%
mutate(href = glue("curl {href}/download | funzip")) %>%
pull(href) %>%
fread(encoding = "Latin-1") %>%
as_tibble()
if(reference_state == "all") {
reference_state <- unique(data$uf)
}
data %<>%
filter(uf %in% reference_state) %>%
mutate(across(c(latitude, longitude, km), as.numeric),
across(c(id, br), as.character))
dir.create(glue("./federal_roads_accidents/{reference_year}/prf_raw_data"),
showWarnings = FALSE)
# Save original raw data
write_csv2(data, glue("./federal_roads_accidents/{reference_year}/prf_raw_data/{reference_year}_{ifelse(length(reference_state) > 1, 'many', reference_state)}_raw.csv"))
data
}
accidents <- get_raw_accidents(year)
data
data %<>%
filter(uf %in% reference_state) %>%
mutate(across(c(latitude, longitude, km), partial(parse_double, locale(decimal_mark = ','))),
across(c(id, br), as.character))
get_raw_accidents <- function(reference_year,
reference_state = "all") {
html_content <-
read_html("https://portal.prf.gov.br/dados-abertos-acidentes") %>%
html_node("#acontent ul") %>%
html_nodes("li")
data <- tibble(
href = {
html_content %>%
html_children %>%
html_attr("href")
},
year = {
html_content %>%
html_text() %>%
as.numeric() }
) %>%
filter(year == reference_year) %>%
mutate(href = glue("curl {href}/download | funzip")) %>%
pull(href) %>%
fread(encoding = "Latin-1") %>%
as_tibble()
if(reference_state == "all") {
reference_state <- unique(data$uf)
}
data %<>%
filter(uf %in% reference_state) %>%
mutate(latitude = parse_double(latitude, locale = locale(decimal_mark = ',')),
longitude = parse_double(longitude, locale = locale(decimal_mark = ',')),
km = parse_double(km, locale = locale(decimal_mark = ',')),
id = as.character(id))
dir.create(glue("./federal_roads_accidents/{reference_year}/prf_raw_data"),
showWarnings = FALSE)
# Save original raw data
write_csv2(data, glue("./federal_roads_accidents/{reference_year}/prf_raw_data/{reference_year}_{ifelse(length(reference_state) > 1, 'many', reference_state)}_raw.csv"))
data
}
accidents <- get_raw_accidents(year)
accidents
# Convert original data frame into sf
accidents_sf <-
st_as_sf(accidents,
coords = c("longitude", "latitude"),
crs = "+proj=longlat +datum=WGS84")
accidents_sf
### Change colnames
# Change CRS to SIRGAS  Geodetic reference system "SIRGAS2000" , CRS(4674).
st_cres(accidents_sf)
library(sf)
st_transform(accidents_sf, 4674)
